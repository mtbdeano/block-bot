name: Build branch and push image to GCR
on: [push]

env:
  PROJECT_ID: ${{ secrets.RUN_PROJECT }}
  GCE_INSTANCE: ${{ secrets.INSTANCE_NAME }}
  GCE_INSTANCE_ZONE: ${{ secrets.INSTANCE_ZONE }}
  MINECRAFT_URI: ${{ secrets.MINECRAFT_URI }}
  DISCORD_TOKEN: ${{ secrets.DISCORD_TOKEN }}
jobs:
  build-and-push:
    name: Build and push
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Set up Python 3.7
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Test with pytest
        run: |
          pytest
      - name: Setup gcloud
        uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          version: '290.0.1'
          service_account_key: ${{ secrets.RUN_SA_KEY }}
          project_id: ${{ secrets.RUN_PROJECT }}
      # Configure Docker to use the gcloud command-line tool as a credential
      # helper for authentication
      - name: Authorize with GCR
        run: |-
          gcloud --quiet auth configure-docker
      # Build the Docker image
      - name: Container build
        run: |-
          docker build --tag "gcr.io/$PROJECT_ID/$GCE_INSTANCE-image:$GITHUB_SHA" \
          --build-arg DISCORD_TOKEN={DISCORD_TOKEN} \
          --build-arg MINECRAFT_URI=${MINECRAFT_URI} \
          .
      # Push the Docker image to Google Container Registry
      - name: Publish
        run: |-
          docker push "gcr.io/$PROJECT_ID/$GCE_INSTANCE-image:$GITHUB_SHA"
      - name: Deploy (master)
        if: ${{ github.ref == 'master' }}
        run: |-
          gcloud compute instances update-container "$GCE_INSTANCE" \
            --zone "$GCE_INSTANCE_ZONE" \
            --container-image "gcr.io/$PROJECT_ID/$GCE_INSTANCE-image:$GITHUB_SHA"
